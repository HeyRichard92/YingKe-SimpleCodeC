apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    // 构建版本
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    // 默认的配置
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
            ndk {
                abiFilters "armeabi-v7a"
            }
        }

        sourceSets {
            main {
                // so库地址
                jniLibs.srcDirs = ['libs']
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly rootProject.ext.libraries.kotlin_lib
    compileOnly rootProject.ext.libraries.androidx_appcompat
    compileOnly rootProject.ext.libraries.androidx_core

    compileOnly rootProject.ext.libraries.androidx_fragment
    compileOnly rootProject.ext.libraries.androidx_media
    compileOnly rootProject.ext.libraries.androidx_list
    compileOnly rootProject.ext.libraries.androidx_multidex

    compileOnly rootProject.ext.libraries.android_bolts

    compileOnly rootProject.ext.libraries.androidx_constraint
    compileOnly rootProject.ext.libraries.permision_lib

    compileOnly project(path: ':core')

}
